<?xml version="1.0" encoding="UTF-8"?>
<component type="addon">
  <id>org.gimp.GIMP.Plugin.GMic</id>
  <extends>org.gimp.GIMP</extends>
  <name>G'MIC</name>
  <summary>GREYC's Magic for Image Computing</summary>
  <url type="homepage">https://gmic.eu/</url>
  <metadata_license>CC0-1.0</metadata_license>
  <project_license>CECILL-C</project_license>
  <updatecontact>hub_AT_figuiere.net</updatecontact>
  <releases>
    <release date="2022-06-16" version="3.1.3" />
    <release date="2022-05-13" version="3.1.2" />
    <release date="2022-04-26" version="3.1.0" />
    <release date="2022-01-19" version="3.0.2" />
    <release date="2022-01-13" version="3.0.1" />
    <release date="2021-12-09" version="3.0.0" />
    <release date="2021-09-03" version="2.9.9" />
    <release date="2021-07-16" version="2.9.8" />
    <release date="2021-04-07" version="2.9.7" />
    <release date="2021-02-09" version="2.9.6" />
    <release date="2021-02-05" version="2.9.5">
      <description>
        <p>New features:</p>
        <ul>
          <li>[gmic-qt-295] New button “Copy G’MIC Command to Clipboard”
          added, to make it easier getting the G’MIC command line
          corresponding to the applied filter.</li>
          <li>[gmic-qt-295] New filter Artistic / Ghost creates a ghost
          effect from an input image.</li>
          <li>[gmic-qt-295] New filter Colors / Tune HSV Colors allows
          to finely remap HSV basis colors acording to the user’s
          settings. Use complex CLUT reconstruction internally.</li>
          <li>[gmic-qt-295] New filter “Rendering/Hypotrochoid”
          renders hypotrochoid curves.</li>
          <li>[gmic-qt-295] New filter "About/What’s New? " shows
          recent modifications of the plug-in filters (new or
          removed).</li>
          <li>[core-295] New command output_obj that saves a 3D object
          into a Wavefront .obj file (something that Blender can import
          easily).</li>
          <li>[core-295] Input/output of .raw, .cimg and .cimgz data
          files now accept bool as a possible type. In that case, the
          image data are stored using a bitwise format.</li>
          <li>[math-core-295] New function addr(expr) returns the
          internal pointer address to the specified expression
          expr.</li>
        </ul>
        <p>Improvements / Modifications:</p>
        <ul>
          <li>[core-295] Command interpreter has been slightly optimized:
          <ul>
            <li>Debug info are not included by default anymore when
            reading a command file;</li>
            <li>Checking the validity of the interpreter state is now
            done only in debug mode.</li>
            <li>Static analyzer determines if item substitution can be
            skipped for some items.</li>
            <li>Added more memory slots to store variables, leading to
            less string comparisons when accessing a variable value, in
            case many variables are defined.</li>
          </ul>
          </li>
          <li>[core-295] Native commands that define default arguments
          now accepts , as an argument (just as with custom
          commands).</li>
          <li>[core-295] Command split3d has a different argument
          full_split which allows to enable splitting of 3D object
          primitives as single images in the resulting list.</li>
          <li>[core-295] File options, if any specified, are now passed
          to custom commands input_ext and output_ext.</li>
          <li>[core-295] New pre-defined variables $_os, $_flags,
          $_pixeltype give additional information on G’MIC interpreter
          and its running environment.</li>
          <li>[stdlib-295] Commands replace_str and replace_seq slightly
          optimized.</li>
        </ul>
        <p>Bug fixes:</p>
        <ul>
          <li>[stdlib-295] Command display: Fix “shaking aspect ratio”
          bug happening when visualizing small images.</li>
          <li>[math-core-295] Fixed user assignment of reserved variable
          in.</li>
          <li>[math-core-295] Fixed wrong behavior of expression v[ind]
          = value, when v was a pre-defined variable (as ia, ic, in,
          …).</li>
          <li>[core-295] Command svd: check that specified selected
          images are indeed matrices (no depth or multiple
        channels).</li>
        </ul>
      </description>
    </release>
    <release date="2020-11-24" version="2.9.4">
      <description>
        <p>Improvements / Modifications:</p>
        <ul>
          <li>[math-core-294] Function sort() can be now applied only
          on a subset of the input vector.</li>
          <li>[core-294] Avoid
          compilation warning in function CImgList&lt;T&gt;::font(),
          with g++ &gt;=v.10.</li>
        </ul>
        <p>Bug fixes:</p>
        <ul>
          <li>[core-294] Fix invalid memory read that could happen in
          function gmic::add_commands().</li>
          <li>[core-294] Fix invalid memory read that could happen in
          command uncommand.</li>
          <li>[core-294] Fix null pointer indirection that could
          happen in function gmic::run().</li>
        </ul>
      </description>
    </release>
    <release date="2020-11-16" version="2.9.3">
      <description>
        <p>New features:</p>
        <ul>
          <li>[gmic-qt-293] New filter Patterns / Random Pattern
          renders an image containing a random pattern, based on a
          random complex-valued function generator. Associated command
          random_pattern has been added in the G’MIC stdlib as
          well.</li>
          <li>[gmic-qt-293] New filter Degradations / Rebuild From
          Blocs. It subdivides an image into blocs, and replace each
          bloc by the most similar bloc found in the set of other
          blocs.</li>
          <li>[gmic-qt-293] New filter: Degradations / Blur
          [Multidirectional].</li>
          <li>[gmic-qt_293] New translation system has been set up to
          allow translations of all filter widgets, rather than just
          the interface widgets.</li>
          <li>[stdlib-293] New command display_camera (shortcut: dc)
          opens a simple interactive webcam viewer.</li>
          <li>[math-core-293] New function expr('formula',_w,_h,_d,_s)
          outputs a vector of size w*h*d*s with values generated from
          the specified formula, as if one were filling an image with
          dimensions (w,h,d,s).</li>
          <li>[math-core-293] New function get('varname',_size)
          returns the value of the specified variable, as a vector of
          size values, or as a scalar (if size is zero, or not
          specified).</li>
          <li>[math-core-293] New function arg0() which is basically
          the same as arg() but with the argument index starting from
          0 rather than 1.</li>
          <li>[stdlib-293] New command parse_cli is a parser of .gmic
          files that extracts the description of the #@cli commands
          and outputs them in various formats.</li>
          <li>[stdlib-293] New documentation generator
          implemented. Reference documentation is more flexible and
          can be now written with a light Markdown-like syntax (gmd,
          for G’MIC Markdown). New commands to convert gmd to html or
          ascii outputs have been set up.</li>
        </ul>
        <p>Improvements / Modifications:</p>
        <ul>
          <li>[gmic-qt-293] Default choice for confirmation dialog
          appearing when suppressing a Fave filter is now set to
          Yes.</li>
          <li>[core-293] External calls to ImageMagick’s convert are
          better managed on Windows, when filename or path contain
          spaces or UTF-8 characters.</li>
          <li>[core-293] Command text : improvement of character
          spacing rules.</li>
          <li>[core-293] Command resize: Argument list as
          [image],_interpolation,_boundary_conditions,_ax,_ay,_az,_ac
          is not permitted anymore, because it can be ambiguous
          compared to
          [image],_height,_depth,_spectrum,_interpolation,_boundary_conditions,_ax,_ay,_az,_ac. New
          command resize_as_image (eq. to ri) replaces the use of the
          deprecated argument list.</li>
          <li>[core-293] Revert back on the behavior of commands
          discard and split when invoked with a list of values as the
          argument (i.e no specified axis). They don’t try to preserve
          the geometry of the input images anymore (this was creating
          annoying discontinuities in the behavior of these
          commands).</li>
          <li>[math-core-293] Function get() has now an additional
          option to retrieve the variable value as a string rather
          than as a value or a set of values.</li>
          <li>[math-core-293] Complex functions cabs(), cconj(),
          carg(), ccos(), csin(), ctan(), cexp(), clog(), ccosh(),
          csinh() and ctanh() now accepts scalar-valued arguments (and
          still returns complex numbers, i.e. vector2).</li>
          <li>[stdlib-293] Command convolve_fft now accepts an
          optional boundary_condition argument.</li>
          <li>[compiling-293] Compilation environment on Windows has
          been rebuilt from scratch. It now uses a recent version of
          the g++ compiler (and 3rd-party libs), and Link-Time
          Optimization is now enabled when compiling the G’MIC
          binaries.</li>
        </ul>
        <p>Bug fixes:</p>
        <ul>
          <li>Command +e and +warn: Avoid first undesired line-feed
          character put on stdout.</li>
          <li>Command convolve_fft has been recoded and is more
          precise and fast now.</li>
          <li>Fixed small bug in scope management that made some
          specific sequences of flow commands not working as
          expected.</li>
        </ul>
      </description>
    </release>
    <release date="2020-09-03" version="2.9.2">
      <description>
        <p>New features</p>
        <ul>
          <li>New plug-in filter Artistic / Doodle creates doodles from input photographs.</li>
          <li>
            New native command mproj (stands for matrix projection)
            computes the projection of a matrix into a prescribed
            dictionnary (defined as another matrix), with the choice
            of various projection methods : ortho-projection, matching
            pursuit, and orthogonal matching pursuit. Useful stuff for
            sparse dictionnary learning. Math evaluator gets an
            equivalent mproj() function as well.
          </li>
          <li>
            New pre-defined variables in and in#ind return the L2-norm
            of respectively current image and image #ind, viewed as
            vectors or matrices (in that case, the Frobenius
            norm). Corresponding function in(_#ind) does the same for
            images with dynamic content (e.g. images under
            modification).
          </li>
          <li>
            New commands xyz2jzazbz, rgb2jzazbz, jzazbz2xyz and
            jzazbz2rgb convert RGB or XYZ colors to the Jzazbz
            colorspace (and vice-versa). Code for these commands has
            been borrowed from this page 2 by Alan Gibson (@snibgo).
          </li>
        </ul>
        <p>Improvements / Modifications</p>
        <ul>
          <li>
            Remove support for deprecated double-hyphen prefix
            (--command). Use +command instead.
          </li>
          <li>
            A few internal functions for matrix calculus have been
            better parallelized, when applied on large matrices
            (multiplication, norm, dot product, …).
          </li>
          <li>
            Command invert accepts an optional argument to choose
            between different solver for matrix inversion (can be
            0=SVD or 1=LU). SVD solver is slower for large matrices,
            but less numerically instable. Math evaluator functions
            invert() and pseudoinvert() also gets this optional
            argument.
          </li>
          <li>
            Commands fill and eval better manage auto- or forced
            parallelization when image has a few columns.
          </li>
          <li>
            Commands solve, invert, svd, trisolve and blur : use
            double precision for computation.
          </li>
          <li>
            Command object3d: Add modification in a 3D object format
            to define a perfect sphere primitive from a pair
            (center,point), rather than specifying it only with its
            diameter (point1,point2).
          </li>
          <li>
            Command +echo is now implemented as a native command (faster).
          </li>
          <li>
            Command echo better manages messages starting with CR character.
          </li>
          <li>
            Commands discard and split : When possible, preserve
            principal axis of processed images.
          </li>
          <li>
            Command label: Change output behavior in order to manage
            multi-channels input images, and output always a
            single-channel label image even when a multi-spectral
            input image is given.
          </li>
          <li>
            Command label: New argument to choose between L1 and
            L2-norms for tolerance comparisons.
          </li>
          <li>
            Function transp(), inv() and pseudoinv() have been renamed
            respectively as transpose(), invert() and pseudoinvert()
            to be more coherent with the name of the corresponding
            pipeline commands.
          </li>
          <li>
            Remove useless command unrepeat (eq. to discard without arguments).
          </li>
          <li>
            Add illuminant E as a possible choice for color conversion
            commands involving the XYZ colorspace. Set it as default
            illuminant when no explicit illuminant is specified.
          </li>
        </ul>
        <p>Bugfix</p>
        <ul>
          <li>Math evaluator: Fix possibly wrong pointer in call to delete.</li>
          <li>Command solve: Fix compilation issue when Lapack support is enabled.</li>
          <li>Filter Apply External CLUT: Implement Strength control.</li>
          <li>Fix command colormap, for some degenerated cases.</li>
          <li>Fix possible canvas shift when applying a filter inside a selection.</li>
        </ul>
      </description>
    </release>
    <release date="2020-06-10" version="2.9.1"/>
  </releases>
​</component>
